#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Abot.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="webgraph")]
	public partial class PropertyDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertProperty(Property instance);
    partial void UpdateProperty(Property instance);
    partial void DeleteProperty(Property instance);
    #endregion
		
		public PropertyDataContext() : 
				base(global::Abot.Properties.Settings.Default.webgraphConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PropertyDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Property> Properties
		{
			get
			{
				return this.GetTable<Property>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Property")]
	public partial class Property : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _pageUrl;
		
		private string _address;
		
		private string _price;
		
		private string _saleType;
		
		private string _saleDate;
		
		private string _suburb;
		
		private string _landSize;
		
		private string _propertyFeature;
		
		private string _propertyDescription;
		
		private string _agents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnpageUrlChanging(string value);
    partial void OnpageUrlChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnpriceChanging(string value);
    partial void OnpriceChanged();
    partial void OnsaleTypeChanging(string value);
    partial void OnsaleTypeChanged();
    partial void OnsaleDateChanging(string value);
    partial void OnsaleDateChanged();
    partial void OnsuburbChanging(string value);
    partial void OnsuburbChanged();
    partial void OnlandSizeChanging(string value);
    partial void OnlandSizeChanged();
    partial void OnpropertyFeatureChanging(string value);
    partial void OnpropertyFeatureChanged();
    partial void OnpropertyDescriptionChanging(string value);
    partial void OnpropertyDescriptionChanged();
    partial void OnagentsChanging(string value);
    partial void OnagentsChanged();
    #endregion
		
		public Property()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pageUrl", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string pageUrl
		{
			get
			{
				return this._pageUrl;
			}
			set
			{
				if ((this._pageUrl != value))
				{
					this.OnpageUrlChanging(value);
					this.SendPropertyChanging();
					this._pageUrl = value;
					this.SendPropertyChanged("pageUrl");
					this.OnpageUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saleType", DbType="NVarChar(50)")]
		public string saleType
		{
			get
			{
				return this._saleType;
			}
			set
			{
				if ((this._saleType != value))
				{
					this.OnsaleTypeChanging(value);
					this.SendPropertyChanging();
					this._saleType = value;
					this.SendPropertyChanged("saleType");
					this.OnsaleTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_saleDate", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string saleDate
		{
			get
			{
				return this._saleDate;
			}
			set
			{
				if ((this._saleDate != value))
				{
					this.OnsaleDateChanging(value);
					this.SendPropertyChanging();
					this._saleDate = value;
					this.SendPropertyChanged("saleDate");
					this.OnsaleDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suburb", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string suburb
		{
			get
			{
				return this._suburb;
			}
			set
			{
				if ((this._suburb != value))
				{
					this.OnsuburbChanging(value);
					this.SendPropertyChanging();
					this._suburb = value;
					this.SendPropertyChanged("suburb");
					this.OnsuburbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_landSize", DbType="NVarChar(50)")]
		public string landSize
		{
			get
			{
				return this._landSize;
			}
			set
			{
				if ((this._landSize != value))
				{
					this.OnlandSizeChanging(value);
					this.SendPropertyChanging();
					this._landSize = value;
					this.SendPropertyChanged("landSize");
					this.OnlandSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propertyFeature", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string propertyFeature
		{
			get
			{
				return this._propertyFeature;
			}
			set
			{
				if ((this._propertyFeature != value))
				{
					this.OnpropertyFeatureChanging(value);
					this.SendPropertyChanging();
					this._propertyFeature = value;
					this.SendPropertyChanged("propertyFeature");
					this.OnpropertyFeatureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_propertyDescription", DbType="NVarChar(MAX)")]
		public string propertyDescription
		{
			get
			{
				return this._propertyDescription;
			}
			set
			{
				if ((this._propertyDescription != value))
				{
					this.OnpropertyDescriptionChanging(value);
					this.SendPropertyChanging();
					this._propertyDescription = value;
					this.SendPropertyChanged("propertyDescription");
					this.OnpropertyDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_agents", DbType="NVarChar(MAX)")]
		public string agents
		{
			get
			{
				return this._agents;
			}
			set
			{
				if ((this._agents != value))
				{
					this.OnagentsChanging(value);
					this.SendPropertyChanging();
					this._agents = value;
					this.SendPropertyChanged("agents");
					this.OnagentsChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
